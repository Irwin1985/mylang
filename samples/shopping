#
# A simple interactive program
#

const unsorted_products =
[
    ["Milk", 3.0],
    ["Egg", 2.0],
    ["Yogurt", 1.0],
    ["Tea", 10.0],
    ["Coffee", 15.0],
    ["Banana", 4.0]
];

const products = sort(
    unsorted_products,
    pure func (a, b) => a[0] < b[0]    # The pure func allows the whole expr to be const
);

var shopping_list = [];

func dump_products() {

    foreach(var i, name, price in indexed products)
        print(str(i) + ") " + rpad(name, 15) + " " + lpad(str(price, 2), 5));
}

func read_quantity(pnum) {

    while (true) {

        write("How many " + products[pnum][0] + "? ");
        var input = readln();

        try {

            return float(input);

        } catch {

            print("Invalid quantity");
            continue;
        }
    }
}

print("Shopping list");
print("-" * 40);

while (true) {

    print();
    dump_products();

    print();
    write("Enter product number ('q' to quit): ");
    var input = readln();
    var pnum;

    if (input == "q") {
        print();
        print("Quit");
        break;
    }

    pnum = find(products, input, func(x) => x[0]);

    if (!pnum) {

        try {

            pnum = int(input);

        } catch (TypeErrorEx) {

            print("Invalid number");
            continue;
        }
    }

    if (pnum < 0 || pnum > len(products)-1) {

        print("Invalid number");
        continue;
    }

    var q = read_quantity(pnum);
    append(shopping_list, [pnum, q]);

} # while (true)

print();
print("Shopping list");
print("-" * 40);

var total = 0.0;

foreach (var pnum, q in shopping_list) {

    var name, price = products[pnum];
    var subtotal = price * q;

    print(
        rpad(name, 15)
        + ": $" + str(price, 2)
        + " x " + str(q, 2)
        + " = $" + str(subtotal, 2)
    );

    total += subtotal;
}

print("-" * 40);
print(rpad("Total", 15) + ": $" + str(total, 2));


